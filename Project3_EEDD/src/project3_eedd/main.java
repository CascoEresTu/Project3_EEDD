/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project3_eedd;

import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.Dimension;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Scanner;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import org.graphstream.algorithm.Dijkstra;
import org.graphstream.graph.Edge;
import org.graphstream.graph.Node;
import org.graphstream.graph.implementations.MultiGraph;
import org.graphstream.ui.graphicGraph.GraphicGraph;
import org.graphstream.ui.swingViewer.ViewPanel;
import org.graphstream.ui.view.Viewer;

/**
 *
 * @author cgcv
 */
public class main extends javax.swing.JFrame {

    /**
     * Creates new form main
     */
    public main() {
        System.setProperty("org.graphstream.ui.renderer", "org.graphstream.ui.j2dviewer.J2DGraphRenderer");
        initComponents();
        //Inicializacion de variables globales
        Airports = new ArrayList();
        Flights = new ArrayList();
        Cities = new ArrayList();
        LoadAirportList();
        LoadFlightList();

        graph = GenerateGraph();

        viewer = new Viewer(graph, Viewer.ThreadingModel.GRAPH_IN_GUI_THREAD);
        view = viewer.addDefaultView(true);
        viewer.enableAutoLayout();
        view.openInAFrame(false);
        view.setSize(new Dimension(800, 750));
        this.setSize(1000, 800);
        this.add((Component) view, BorderLayout.SOUTH);
        this.setResizable(false);

        graph_image = viewer.getGraphicGraph();
        this.cb_cityFrom.setModel(this.FillComboBox(cb_cityFrom));
        this.cb_cityFrom.setSelectedIndex(3);
        this.cb_cityTo.setModel(this.FillComboBox(cb_cityTo));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        window_ticket = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtarea_airports = new javax.swing.JTextArea();
        label_distance = new javax.swing.JLabel();
        label_cost = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cb_cityFrom = new javax.swing.JComboBox<>();
        cb_cityTo = new javax.swing.JComboBox<>();
        rb_cost = new javax.swing.JRadioButton();
        rb_distance = new javax.swing.JRadioButton();
        jb_newFlight = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Ticket De Vuelo");

        txtarea_airports.setEditable(false);
        txtarea_airports.setBackground(new java.awt.Color(255, 255, 255));
        txtarea_airports.setColumns(20);
        txtarea_airports.setRows(5);
        txtarea_airports.setBorder(null);
        jScrollPane1.setViewportView(txtarea_airports);

        label_distance.setFont(new java.awt.Font("Consolas", 1, 10)); // NOI18N
        label_distance.setForeground(new java.awt.Color(0, 0, 0));
        label_distance.setText("Distancia:");

        label_cost.setFont(new java.awt.Font("Consolas", 1, 10)); // NOI18N
        label_cost.setForeground(new java.awt.Color(0, 0, 0));
        label_cost.setText("Costo: ");

        jLabel6.setFont(new java.awt.Font("Consolas", 1, 10)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Aeropuertos:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label_cost)
                            .addComponent(label_distance)
                            .addComponent(jLabel6)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jLabel3)))
                .addContainerGap(65, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel3)
                .addGap(31, 31, 31)
                .addComponent(label_cost)
                .addGap(18, 18, 18)
                .addComponent(label_distance)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(152, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout window_ticketLayout = new javax.swing.GroupLayout(window_ticket.getContentPane());
        window_ticket.getContentPane().setLayout(window_ticketLayout);
        window_ticketLayout.setHorizontalGroup(
            window_ticketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        window_ticketLayout.setVerticalGroup(
            window_ticketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(1000, 850));

        cb_cityFrom.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_cityFromItemStateChanged(evt);
            }
        });

        cb_cityTo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_cityToItemStateChanged(evt);
            }
        });

        buttonGroup1.add(rb_cost);
        rb_cost.setText("Costo");

        buttonGroup1.add(rb_distance);
        rb_distance.setText("Distancia ");

        jb_newFlight.setText("Reservar Vuelo");
        jb_newFlight.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_newFlightMouseClicked(evt);
            }
        });

        jLabel1.setText("Ciudad de Salida:");

        jLabel2.setText("Ciudad Destino:");

        jMenuBar1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(254, 242, 242)));

        jMenu2.setText("Ayuda");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(791, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jb_newFlight)
                    .addComponent(cb_cityTo, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rb_distance)
                    .addComponent(rb_cost)
                    .addComponent(cb_cityFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cb_cityFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cb_cityTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(rb_cost)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rb_distance)
                .addGap(92, 92, 92)
                .addComponent(jb_newFlight)
                .addContainerGap(159, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jb_newFlightMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_newFlightMouseClicked
        String type = "";
        if (cityFrom != cityTo) {

            if (this.rb_cost.isSelected()) {
                type = "Cost";
            } else if (this.rb_distance.isSelected()) {
                type = "Distance";
            }
            Object[] flight_data = Dijsktra(this.cityFrom.getAirport(), this.cityTo.getAirport(), type);

            ArrayList<String> path = (ArrayList<String>) flight_data[0];
            if (this.rb_cost.isSelected()) {
                this.label_cost.setText("Costo:" + "   " + flight_data[1]);
                this.label_distance.setText("Distancia:" + "   " + flight_data[2]);
            } else if (this.rb_distance.isSelected()) {
                this.label_cost.setText("Costo:" + "   " + flight_data[2]);
                this.label_distance.setText("Distancia:" + "   " + flight_data[1]);
            }
            Collections.reverse(path);
            String airports = "";
            for (int i = 0; i < path.size() - 1; i++) {
                airports += path.get(i) + "\n";
            }
            this.txtarea_airports.setText(airports);
            this.window_ticket.setModal(true);
            this.window_ticket.pack();
            this.window_ticket.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Por favor, seleccione ciudades distintas.");
        }
    }//GEN-LAST:event_jb_newFlightMouseClicked

    private void cb_cityFromItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_cityFromItemStateChanged
        for (Edge edge : graph.getEachEdge()) {
            this.graph_image.getEdge(edge.getId()).addAttribute("ui.style", "fill-color:#d19214;");
        }
        City temp = (City) this.cb_cityFrom.getSelectedItem();
        this.cityFrom = temp;
    }//GEN-LAST:event_cb_cityFromItemStateChanged

    private void cb_cityToItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_cityToItemStateChanged

        for (Edge edge : graph.getEachEdge()) {
            this.graph_image.getEdge(edge.getId()).addAttribute("ui.style", "fill-color:#d19214;");
        }
        City temp = (City) this.cb_cityTo.getSelectedItem();
        if (temp.getAirport() == cityFrom.getAirport()) {
            JOptionPane.showMessageDialog(this, "No puede realizar un viaje al mismo aeropuerto. \nPor favor, seleccione de nuevo");
        } else {
            this.cityTo = temp;
        }
    }//GEN-LAST:event_cb_cityToItemStateChanged
    public void LoadAirportList() {
        try {
            FileReader fr;
            fr = new FileReader("./ciudades.txt");
            BufferedReader br = new BufferedReader(fr);
            String line = "";
            while ((line = br.readLine()) != null) {
                Scanner sc = null;
                City temp = null;
                sc = new Scanner(line);
                sc.useDelimiter(",");

                while (sc.hasNext()) {
                    temp = new City(sc.next());
                }
                Cities.add(temp);
            }
        } catch (FileNotFoundException ex) {
        } catch (IOException ex) {
        }

        for (int i = 0; i < Cities.size(); i++) {
            if (!Airports.contains(Cities.get(i).getAirport())) {
                Airports.add(Cities.get(i).getAirport());
            }
        }

    }

    public void LoadFlightList() {

        try {
            FileReader fr;
            fr = new FileReader("./flights.txt");
            BufferedReader br = new BufferedReader(fr);
            String line = "";
            while ((line = br.readLine()) != null) {
                if (line == "") {
                    break;
                }
                Scanner sc = null;
                Flight temp = null;
                sc = new Scanner(line);
                sc.useDelimiter(",");
                while (sc.hasNext()) {
                    temp = new Flight(sc.next(), sc.next(), sc.next(), Double.parseDouble(sc.next()), Double.parseDouble(sc.next()));
                }
                Flights.add(temp);
            }
        } catch (FileNotFoundException ex) {
        } catch (IOException ex) {
        }
    }

    public Object[] Dijsktra(String CityFrom, String CityTo, String type) {
        String oppositeType = "";
        if (type.equals("Distance")) {
            oppositeType = "Cost";
        } else {
            oppositeType = "Distance";
        }

        Dijkstra dijkstra = new Dijkstra(Dijkstra.Element.EDGE, null, type);
        dijkstra.init(graph);
        dijkstra.setSource(graph.getNode(CityFrom));
        dijkstra.compute();

        Object[] retval = new Object[3];

        ArrayList<String> path = new ArrayList();
        double Weight = 0;
        double OppositeWeight = 0;

        for (Node node : dijkstra.getPathNodes(graph.getNode(CityTo))) {
            path.add(node.getId());

        }
        for (Edge edge : dijkstra.getPathEdges(graph.getNode(CityTo))) {
            Weight += (Double) edge.getAttribute(type);
            this.graph_image.getEdge(edge.getId()).addAttribute("ui.style", "fill-mode:gradient-horizontal;fill-color:red, orange;");
        }
        for (Edge edge : dijkstra.getPathEdges(graph.getNode(CityTo))) {
            OppositeWeight += (Double) edge.getAttribute(oppositeType);
        }
        dijkstra.clear();

        retval[0] = path;
        retval[1] = Weight;
        retval[2] = OppositeWeight;

        return retval;
    }

    private MultiGraph GenerateGraph() {
        System.setProperty("org.graphstream.ui.renderer", "org.graphstream.ui.j2dviewer.J2DGraphRenderer");

        MultiGraph neo = new MultiGraph("Mapa");
        neo.setStrict(false);
        neo.addAttribute("ui.stylesheet", LoadCSS(new File("./graph.css")));

        for (String Airport : Airports) {
            neo.addNode(Airport).addAttribute("ui.label", Airport);
        }

        for (Flight e : Flights) {
            if (neo.getEdge(e.getAirportFrom() + e.getAirportTo() + "") == null) {
                neo.addEdge(e.getAirportFrom() + e.getAirportTo() + "", e.getAirportFrom(), e.getAirportTo(), true);
                neo.getEdge(e.getAirportFrom() + e.getAirportTo() + "").setAttribute("Cost", e.getCost());
                neo.getEdge(e.getAirportFrom() + e.getAirportTo() + "").setAttribute("Distance", e.getDistance());
            }
        }
        return neo;
    }

    public static String LoadCSS(File file) {
        String css_stylesheet = "";
        try {
            FileReader fr = new FileReader(file);
            BufferedReader br = new BufferedReader(fr);
            String linea = "";
            while ((linea = br.readLine()) != null) {
                css_stylesheet += linea;
            }
            br.close();
            fr.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
        return css_stylesheet;
    }

    public DefaultComboBoxModel FillComboBox(JComboBox cb) {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cb.getModel();
        model.removeAllElements();
        for (int i = 0; i < Cities.size() - 1; i++) {
            model.addElement(Cities.get(i));
        }
        return model;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cb_cityFrom;
    private javax.swing.JComboBox<String> cb_cityTo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jb_newFlight;
    private javax.swing.JLabel label_cost;
    private javax.swing.JLabel label_distance;
    private javax.swing.JRadioButton rb_cost;
    private javax.swing.JRadioButton rb_distance;
    private javax.swing.JTextArea txtarea_airports;
    private javax.swing.JDialog window_ticket;
    // End of variables declaration//GEN-END:variables
    private ArrayList<String> Airports;
    private ArrayList<Flight> Flights;
    private ArrayList<City> Cities;
    private MultiGraph graph;
    private Viewer viewer;
    private ViewPanel view;
    private GraphicGraph graph_image;
    private City cityFrom;
    private City cityTo;

}
